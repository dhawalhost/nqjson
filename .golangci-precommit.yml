# golangci-lint configuration for pre-commit (more lenient)
# See https://golangci-lint.run/usage/configuration/ for more information
version: 2

run:
  timeout: 2m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly

output:
  format: colored-line-number

linters-settings:
  gocyclo:
    min-complexity: 20  # More lenient for pre-commit
  # lll:
  #   line-length: 200    # More lenient for pre-commit

linters:
  disable-all: true
  enable:
    # Critical linters that should block commits
    - errcheck # Check for unchecked errors
    - gosec # Security-related issues
    - govet # Go's official vet tool
    - staticcheck # Modern, comprehensive linter
    - ineffassign # Detect when assignments to existing variables are not used
    - gofmt # Check for gofmt issues
    - misspell # Check for common misspellings
    - revive # Fast, configurable linter
    - gocyclo   # Check for cyclomatic complexity
    - typecheck # Like govet, but more thorough
    - unused # Check for unused variables, functions, etc.
    - varcheck # Check for unused global variables and constants
    - structcheck # Check for unused struct fields
    - deadcode # Check for unused code
    - depguard # Enforce import restrictions
    - lll # Check for long lines
    - goimports # Check for missing or unorganized imports
    # Additional linters that are useful but not critical
    - bodyclose # Check that HTTP response bodies are closed
    - dupl # Check for duplicate code
    - nakedreturns # Check for naked returns in functions with > 2 lines
    - goconst # Suggest using constants for repeated strings
    - prealloc # Suggest preallocation of slices
    - scopelint # Check for variables that could be moved to a smaller scope
    - unparam # Check for unused function parameters
    - whitespace # Check for unnecessary whitespace
    - wslinters # Check for Windows-style line endings
    - wrapcheck # Check for fmt.Errorf wrapping
    - interfacer  # Suggest narrower interface types
    - funlen  # Check for functions that are too long
    - exhaustivestruct # Check for missing struct fields in composite literals


issues:
  exclude-dirs:
    - vendor
  exclude-files:
    - ".*_test.go"
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - errcheck
        - gosec

    # Exclude unsafe usage warnings - we need them for performance
    - linters:
        - gosec
      text: "G103: Use of unsafe calls should be audited"

  max-issues-per-linter: 20
  max-same-issues: 10
